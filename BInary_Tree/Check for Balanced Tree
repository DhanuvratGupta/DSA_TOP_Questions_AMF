// https://practice.geeksforgeeks.org/problems/check-for-balanced-tree/1
//https://leetcode.com/problems/balanced-binary-tree/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public static int fun(TreeNode root)
    {
        if(root==null)
        {
            return 0;
        }
        int left=fun(root.left);
        int right=fun(root.right);
        if(left==-1 || right==-1)
        {
           
            return -1;
            
        }
        if(Math.abs(left-right)>1)       //abs return absulate value like -7 = Math.abs(-7)=7
        {
            
            return -1;
        }
        return 1+Math.max(left,right);
    }
    public boolean isBalanced(TreeNode root) {
        return fun(root)!=-1;
    }
}
