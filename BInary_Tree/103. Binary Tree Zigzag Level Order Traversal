//https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>>list=new ArrayList<>();
        
        Queue<TreeNode>q=new LinkedList<>();
        q.add(root);
        int count=0;
        
        while(!q.isEmpty())
        {
            List<Integer>list1=new ArrayList<>();
            TreeNode tmp=null;
            if(q.peek()!=null)
              tmp=q.peek();
            else
                break;
                
            int size=q.size();
            for(int i=0;i<size;i++)
            {
                
                tmp=q.peek();
                list1.add(tmp.val);
                q.remove();
                if(tmp.left!=null)
                {
                    q.add(tmp.left);
                }
                if(tmp.right!=null)
                {
                    q.add(tmp.right);
                }
            
                
            }
            count++;
            if(count%2==0)
            {
                Collections.reverse(list1);
            }
            
            list.add(list1);
            
        }
        return list;
    }
}
