//{ Driver Code Starts
// Initial Template for Java

import java.util.*;
class Rat {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] a = new int[n][n];
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++) a[i][j] = sc.nextInt();

            Solution obj = new Solution();
            ArrayList<String> res = obj.findPath(a, n);
            Collections.sort(res);
            if (res.size() > 0) {
                for (int i = 0; i < res.size(); i++)
                    System.out.print(res.get(i) + " ");
                System.out.println();
            } else {
                System.out.println(-1);
            }
        }
    }
}

// } Driver Code Ends


// User function Template for Java

// m is the given matrix and n is the order of matrix
class Solution {
    public static boolean isSafe(int x,int y,int tmp[][],int m[][],int n)
    {
        if((x>=0 && x<n) && (y>=0 && y<n) && tmp[x][y]==0 && m[x][y]==1)
        {
            return true;
        }
        return false;
    }
    public static void fun(int [][]tmp,int [][]m, ArrayList<String>ans,int first,int sec,int size,String s)
    {
        if(first==size-1 && sec==size-1)
        {
            //System.out.println("f");
            ans.add(s);
            return;
        }
        tmp[first][sec]=1;
        int x=first+1;
        int y=sec;
        //down
        if(isSafe(x,y,tmp,m,size))
        {
            //System.out.println("d");
            s=s+"D";
            fun(tmp,m,ans,x,y,size,s);
            StringBuilder s1=new StringBuilder(s);
            s1=s1.deleteCharAt(s1.length()-1);
            s=s1.toString();
        }
        //left
        x=first;
        y=sec-1;
        
        if(isSafe(x,y,tmp,m,size))
        {
            //System.out.println("l");
            s=s+"L";
            fun(tmp,m,ans,x,y,size,s);
            StringBuilder s1=new StringBuilder(s);
            s1=s1.deleteCharAt(s1.length()-1);
            s=s1.toString();
        }
        //right
        x=first;
        y=sec+1;

        if(isSafe(x,y,tmp,m,size))
        {
            //System.out.println("r");
            s=s+"R";
            fun(tmp,m,ans,x,y,size,s);
            StringBuilder s1=new StringBuilder(s);
            s1=s1.deleteCharAt(s1.length()-1);
            s=s1.toString();
        }
        //up
        x=first-1;
        y=sec;
        
        if(isSafe(x,y,tmp,m,size))
        {
            //System.out.println("u");
            s=s+"U";
            fun(tmp,m,ans,x,y,size,s);
            StringBuilder s1=new StringBuilder(s);
            s1=s1.deleteCharAt(s1.length()-1);
            s=s1.toString();
        }
        tmp[first][sec]=0;
    }
    
        
    
    public static ArrayList<String> findPath(int[][] m, int n) {
        if(m[0][0]==0)
        {
            return new ArrayList<String>();
        }
        ArrayList<String>ans=new ArrayList<>();
        int tmp[][]=new int[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                tmp[i][j]=0;
            }
        }
        String s="";
        fun(tmp,m,ans,0,0,n,s);
        Collections.sort(ans);
        //System.out.println(ans);
        return ans;
    }
}
