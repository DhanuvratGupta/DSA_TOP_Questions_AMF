/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int ans=0;
    public void find(TreeNode root, int low, int high,List<Integer>list)
    {
      
       if(root==null)
        {
          return;
        }
        if(root.val<=high && root.val>=low && !list.contains(root.val))
        {
          ans=ans+root.val;
        }
        find(root.left,low,high,list);
        list.add(root.val);
        find(root.right,low,high,list);
    }
    public int rangeSumBST(TreeNode root, int low, int high) {
        find(root,low,high,new ArrayList<>());
        
        
        
        return ans;
    }
}
