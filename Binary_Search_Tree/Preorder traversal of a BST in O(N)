Time Complexity - O(N)
#include <bits/stdc++.h> 
/*
    Following is the class structure of BinaryTreeNode class for referance:

    class BinaryTreeNode {
       public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };
*/

BinaryTreeNode<int>* solve(vector<int> &preorder, int s, int e, int &i){
    if(i >= preorder.size())
        return NULL;
    if(preorder[i]<s || preorder[i]> e)
        return NULL;
    
    BinaryTreeNode<int>* root = new BinaryTreeNode<int>(preorder[i++]);
    root->left = solve(preorder, s, root->data, i);
    root->right = solve(preorder, root->data, e,i);
    return root;
    
}
BinaryTreeNode<int>* preorderToBST(vector<int> &preorder) {
    int s = INT_MIN;
    int e = INT_MAX;
    int i = 0;
    return solve(preorder, s, e, i);
}
