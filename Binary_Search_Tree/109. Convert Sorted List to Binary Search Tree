/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
  public TreeNode insert(List<Integer>list,int l,int r)
  {
    if(l>r)return null;
    int mid=(l+r)/2;
    TreeNode tmp=new TreeNode(list.get(mid));
    tmp.left=insert(list,l,mid-1);
    tmp.right=insert(list,mid+1,r);
    return tmp;
  }
    public TreeNode sortedListToBST(ListNode head) {
        if(head==null)
        {
          return null;
        }
        List<Integer>list=new ArrayList<>();
        while(head!=null)
        {
          list.add(head.val);
          head=head.next;
        }
        
        int l=0;
        int r=list.size()-1;
        return insert(list,l,r);
      
    }
}
