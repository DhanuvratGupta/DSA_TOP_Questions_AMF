class Solution {
  int ans=0;
    public int find(String s1,String s2,int i,int j,int arr[][])
    {
        if(i>=s1.length() || j>=s2.length())
        {
          return 0;
        }
        if(arr[i][j]!=-1)
        {
           return arr[i][j];
        }
        if(s1.charAt(i)==s2.charAt(j))
        {
          return 1+find(s1,s2,i+1,j+1,arr);
        }

        else
        {
          ans= Math.max(find(s1,s2,i+1,j,arr),find(s1,s2,i,j+1,arr));
        }
        return arr[i][j]=ans;
    }
    public int longestCommonSubsequence(String text1, String text2) {
        int arr[][]=new int[text1.length()][text2.length()];
        for (int[] row : arr)
            Arrays.fill(row, -1);
        return find(text1,text2,0,0,arr);
    }
}
