//https://leetcode.com/problems/climbing-stairs/
//MEMORAIZATION DP
//time complexity = o(n)
//space complexity=o(n)+o(n)
//                  ~o(n)
class Solution {
    public int fun(int n,int arr[])
    {
        if(n==1 || n==0)
        {
            return 1;
        }
        if(arr[n]!=-1)
        {
            return arr[n];
        }
        arr[n]=fun(n-1,arr)+fun(n-2,arr);
        System.out.println(arr[n]);
        return arr[n];
    }
    public int climbStairs(int n) {
        int arr[]=new int[n+1];
        for(int i=0;i<=n;i++)
        {
            arr[i]=-1;
        }
        return fun(n,arr);
    }
    
}
