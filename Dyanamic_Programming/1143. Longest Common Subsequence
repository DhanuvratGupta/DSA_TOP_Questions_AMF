//https://leetcode.com/problems/longest-common-subsequence/submissions/860439130/
class Solution {
    public int find(String s1,String s2,int index1,int index2,int arr[][])
    {
        if(index1<0 || index2<0)
        {
            return 0;
        }
        if(arr[index1][index2]!=0)
        {
            return arr[index1][index2];
        }
        if(Character.toString(s1.charAt(index1)).equals(Character.toString(s2.charAt(index2))))
        {
            return arr[index1][index2]=1+find(s1,s2,index1-1,index2-1,arr);
        }
        else
        {
            return arr[index1][index2]=0+Math.max(find(s1,s2,index1-1,index2,arr),find(s1,s2,index1,index2-1,arr));
        }
    }
    public int longestCommonSubsequence(String text1, String text2) {
        int index1=text1.length()-1;
        int index2=text2.length()-1;
        int arr[][]=new int[text1.length()][text2.length()];
        //Arrays.fill(arr,-1);
        return find(text1,text2,index1,index2,arr);
    }
}
