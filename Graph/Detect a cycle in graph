//https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=detect-cycle-in-an-undirected-graph

class Solution {
    // Function to detect cycle in an undirected graph.\
    class pair{
        int node;
        int from;
        pair(int node,int from)
        {
            this.node=node;
            this.from=from;
        }
    }
    public boolean isCheck(int src,int V,boolean arr[],ArrayList<ArrayList<Integer>> adj)
    {
        Queue<pair>q=new LinkedList<>();
        arr[src]=true;
        q.add(new pair(src,-1));
        while(!q.isEmpty())
        {
            int node=q.peek().node;
            int parent=q.peek().from;
            q.remove();
            for(int root:adj.get(node))
            {
                if(arr[root]!=true)
                {
                    arr[root]=true;
                    q.add(new pair(root,node));
                }
                else if(parent!=root)
                {
                    return true;
                }
            }
            
        }
        return false;
    }
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        Solution ob=new Solution();
       boolean arr[]=new boolean[V];
       
       for(int i=0;i<V;i++)
       {
           if(arr[i]==false)
           {
               if(ob.isCheck(i,V,arr,adj))
               {
                   return true;
               }
           }
           
       }
       return false;
    }
}
